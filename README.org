#+TITLE: The Shinyscreen Package

* Overview

  Shinyscreen R package is an application intended to give the user a
  first look into /raw/ mass-spectrometry data. This currently means
  that, given the input of data files and a list of masses of know, or
  unknown compounds, the application is going to produce the MS1 and
  MS2 chromatograms of the substances in the list, as well as the MS2
  spectra. None of these features have been post-processed in the
  slightest. However, there is a built-in prescreening aid that will
  help the user assess the quality of the spectra.

  The application is powered by the MSnbase package and built as a
  Shiny web application.
  
* Usage 
** Inputs (or, what to have at hand before starting Shinyscreen)
   1. The data files in mzML format.
   2. The compound list.

      The list should be a comma separated file (CSV). The separator
      must be a comma. If it is known which compounds are being
      screened for, the CSV should contain the following columns:
      *ID*, *Name*, *SMILES* and *RT*. Of the previously mentioned
      columns, the ID and SMILES are required to be filled. The ID is
      user-given identifier that is unique to a compound. The SMILES
      column should contain the SMILES strings of the compounds. These
      should be in the MS-Ready format. The column *Name* , if filled
      will be used to print a heading in the plots. If the retention
      time column, *RT*, is empty, the program will seek through the
      entire duration of the run and this can be slow for many
      compounds and big datafiles. If *RT* column has values, only the
      data within a specified time delta around the retention time
      will be scanned, leading to large efficiency improvements.

      #+CAPTION: The first few rows of a compound list containing known compounds.
      |  ID | Name                  | SMILES                          |   RT |
      |-----+-----------------------+---------------------------------+------|
      |  33 | "Isoproturon"         | "CC(C)C1=CC=C(NC(=O)N(C)C)C=C1" | 19.6 |
      | 717 | "epsilon-Decalactone" | "CCCCC1CCCCC(=O)O1"             |      |
      | ... | "..."                 | "..."                           | ...  |

      If the only known information about the compounds are the masses
      of the progenitor ions, then it is only required to fill out the
      *ID* and the *mz* columns. The mz column will contain the mass
      of the precursor ion, and the ID should be filled as explained
      before.

      #+CAPTION: The first few rows of a compound list containing unknown compounds.
      |  ID | mz       |
      |-----+----------|
      |  22 | 296.1160 |
      | 888 | 503.2816 |
      | ... | ...      |
      
      The column names are case-sensitive.

   
   3. The compound sets.

      Shinyscreen organises its data around the concept of compound
      sets. If, given a collection of data files, it is possible
      to break down the compounds into logical groups, shinyscreen
      will make it easier to navigate different groups if this is
      specified in a CSV list. In this case, the CSV file contains two
      columns: *ID* and *set*. The *ID* is the identifier of the
      compound from the compound list and *set* is a name of the
      set. If there is no sensible way of splitting compounds in
      groups, it is enough to copy all the ID-s from the compound list
      into a new CSV and use any character string to fill out the
      *set* column.

      #+CAPTION: The first few rows of a compound set.
      |  ID | set  |
      |-----+------|
      |  33 | mixA |
      | 717 | mixA |
      | 999 | mixA |
      | ... | ...  |
      | 129 | mixB |
      | 516 | mixB |
      | ... | ...  |
      | 333 | mixC |
      | 999 | mixC |


      
   
     
      
** Installation
*** The simplest way to install Shinyscreen that always works (at least on *nix systems)
   #+BEGIN_SRC shell
     R CMD INSTALL /path/to/the/downloaded/package
   #+END_SRC
*** A snippet to test Shinyscreen after installation
   #+BEGIN_SRC r
     library(shinyscreen)
     shinyScreenApp()
   #+END_SRC
*** Windows/R Studio
   TODO
* Contribute
** Current State of Code
   The situation is very fluid, especially in the shinyUI.R which
   contains the Shiny interface. This part of code looks like a mess
   (though, it's organised mess), due to swapping out some major parts
   of the functionality and a recent coding style change.
** GUI Style Guide
*** Colour Scheme
    - LCSB colours?
*** Boxes
    - All boxes should have statuses. Shinydashboard defines
      ~primary~, ~success~, ~info~, ~warning~ and ~danger~.
    - Words in titles should be capitalised, except for /a/, /of/ et simile.
    - Titles for widgets, where applicable, should consists of full
      sentences. Yes, with a full-stop at the end.
*** Usage Flow
    The UI should feel sequential to the user, unless the actions that
    are being performed need continuous feedback, or
    refinement. Encapsulate things that rarely, or never change into
    steps that can be executed and then forgotten about.
