# Copyright (C) 2023 by University of Luxembourg

# Summary
#
# This is a file which describes CI/CD pipeline for Shinyscreen. The
# main goal is to test Shinyscreen and create appropriately versioned
# Docker images on whichever container registry is used.
#
# There are three stages: _build_, _test_ and _release_. Jobs
# associated with build and test stages should run an all
# commits. Release jobs run exclusively on master branch and only for
# tagged commits.
#
# Job tags _docker_ and _$RUNNER_TAG_ serve to inform GitLab which
# gitlab-runners (programs which perform jobs) are suitable to pick up
# the pipeline.
#
# The pipeline itself is following the paradigm of docker-in-docker
# build. In short, it helps having reproducible builds and
# tests. There is more documentation available online.


image: docker:23.0.1
services:
  - docker:23.0.1-dind

stages:
  - build
  - test
  - release

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG

build:
  tags:
    - docker
    - $RUNNER_TAG
  stage: build
  before_script:
    # This did not work, so mounting authentication JSON on the side
    # of the runner.
    # - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" --username "$CI_REGISTRY_USER" --password-stdin
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE


test:
  tags:
    - docker
    - $RUNNER_TAG
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE test

release-image:
  tags:
    - docker
    - $RUNNER_TAG
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master    
